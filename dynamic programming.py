import matplotlib.pyplot as plt
import time

start_time = time.time()
def knapSack(W, wt, val): 
    n = len(val)
    table = [[0 for x in range(W + 1)] for x in range(n + 1)] 

    for i in range(n + 1): 
        for j in range(W + 1): 
            if i == 0 or j == 0: 
                table[i][j] = 0
            elif int(wt[i-1]) <= j: 
                table[i][j] = max(val[i-1] + table[i-1][j-int(wt[i-1])], table[i-1][j]) 
            else: 
                table[i][j] = table[i-1][j] 

    result = table[n][W]
    print("Maximum value:", result)

    selected_items = []
    i = n
    j = W
    while i > 0 and j > 0:
        if table[i][j] != table[i-1][j]:
            selected_items.append(i-1)
            j = j - int(wt[i-1])
        i = i - 1

    selected_items.reverse()
    accumulated_weight=0 
    print("Selected items: ")
    for i in selected_items:
        accumulated_weight += wt[i]
        print("Adding Weight:", wt[i],"-----", "Accumulated weight:",accumulated_weight ,"-----", "Value:", val[i])
    
    total_weight = sum([wt[i] for i in selected_items])
    print("\n\nThe best solution:")
    print("\nKnapsack capacity:",W)
    print("Total weight in Knapsack:", total_weight)
    print("Maximum value in Knapsack:", result)
    print("SOLUTION GENERATED BY DYNAMIC PROGRAMMING")
    return result

with open(r"C:\Users\omesh\Desktop\CW\spring_2023\EXP_SYS\Final_project\items3.txt", "r") as f:

    n = 0
    wt = []
    val = []
    for line in f:
        w, v = map(float, line.split())
        wt.append(w)
        val.append(v)
        n += 1
 
    W = int(input("Enter the capacity of the knapsack: "))
    knapSack(W, wt, val)


end_time = time.time()
elapsed_time = end_time - start_time

print("Time taken to execute the program:", elapsed_time, "seconds")
